name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  go-quality:
    name: Go Code Quality
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: install mage
      working-directory: ./golang
      run: go install github.com/magefile/mage@latest

    - name: install dependencies
      working-directory: ./golang
      run: mage install

    - name: Run linter
      working-directory: ./golang
      run: mage lint

  python-quality:
    name: Python Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install dependencies
      working-directory: ./python
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install flake8 black isort mypy pylint bandit safety

    - name: Run Bandit (static-analysis security scan)
      working-directory: ./python
      run: bandit -r . -o bandit-report.txt -f txt

    - name: Run Safety (dependency vulnerability scan)
      working-directory: ./python
      run: safety check --full-report --output safety-report.txt
    - name: Run flake8
      working-directory: ./python
      run: flake8 . --count --statistics --tee --output-file=flake8-report.txt

    - name: Run pylint
      working-directory: ./python
      run: pylint updater/ --output-format=text --reports=yes --output=pylint-report.txt || true

    - name: Run mypy
      working-directory: ./python
      run: mypy . --ignore-missing-imports --txt-report mypy-report

    - name: Check code formatting
      working-directory: ./python
      run: |
        black --check --diff .
        isort --check-only --diff .

    - name: Upload quality reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: python-quality-reports
        path: |
          python/flake8-report.txt
          python/pylint-report.txt
          python/mypy-report/
          python/bandit-report.txt
          python/safety-report.txt

  documentation:
    name: Documentation Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check markdown links
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        use-verbose-mode: 'yes'
        config-file: '.github/markdown-link-check.json'

    - name: Lint markdown files
      uses: DavidAnson/markdownlint-cli2-action@v16
      with:
        globs: '**/*.md'

  commit-quality:
    name: Commit Quality
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Conventional Commits
      uses: webiny/action-conventional-commits@v1.3.0
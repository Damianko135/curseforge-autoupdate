name: Go CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'golang/**'
      - '.github/workflows/go-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'golang/**'
      - '.github/workflows/go-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24', '1.23']
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('golang/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-

    - name: Setting up mage
      run: go install github.com/magefile/mage@latest

    - name: Run mage to install needed tools
      working-directory: ./golang
      run: mage install

    - name: Run mage to lint
      working-directory: ./golang
      run: mage lint

    - name: Run mage to vet
      working-directory: ./golang
      run: mage vet

    - name: Run mage to test
      working-directory: ./golang
      run: mage test

    - name: Upload coverage to Codecov
      if: matrix.go-version == '1.22'
      uses: codecov/codecov-action@v4
      with:
        file: ./golang/coverage.out
        flags: golang
        name: golang-coverage

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Setting up mage
      run: go install github.com/magefile/mage@latest

    - name: Build CLI and Web
      working-directory: ./golang
      run: mage build
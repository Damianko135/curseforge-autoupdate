name: Python CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'python/**'
      - '.github/workflow/python-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'python/**'
      - '.github/workflow/python-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('python/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-

    - name: Install dependencies
      working-directory: ./python
      run: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black isort mypy

    - name: Lint with flake8
      working-directory: ./python
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check code formatting with black
      working-directory: ./python
      run: black --check .

    - name: Check import sorting with isort
      working-directory: ./python
      run: isort --check-only .

    - name: Type check with mypy
      working-directory: ./python
      run: mypy . --ignore-missing-imports

    - name: Test with pytest
      working-directory: ./python
      run: |
        pytest --cov=updater --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        file: ./python/coverage.xml
        flags: python
        name: python-coverage

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install build dependencies
      working-directory: ./python
      run: |
        python3 -m pip install --upgrade pip
        pip install build wheel

    - name: Build package
      working-directory: ./python
      run: python3 -m build

    - name: Test installation
      working-directory: ./python
      run: |
        pip install dist/*.whl
        python -c "import updater; print('Package installed successfully')"